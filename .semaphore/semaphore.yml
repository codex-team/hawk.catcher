version: v1.0
name: Go project example
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

blocks:
  - name: Build sources
    task:
      jobs:
        - name: Build sources
          commands:
            - checkout
            - sem-version go 1.12
            - go mod vendor
            - cache store $SEMAPHORE_PROJECT_NAME-$(checksum go.sum) vendor
            - go build -o bin/hawk.collector -mod=vendor .

  - name: Unit tests
    task:
      jobs:
        - name: Unit tests
          commands:
            - checkout
            - sem-version go 1.12
            - cache restore $SEMAPHORE_PROJECT_NAME-$(checksum go.sum)
            - go test ./... -v -mod=vendor

  - name: Docker build
    skip:
      when: "branch != 'stage' AND branch != 'master' AND branch != 'semaphore-setup' AND branch !~ '^release-\/'"
    task:
      secrets:
        - name: docker-registry
      jobs:
        - name: Docker build
          commands:
            - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" ${REGISTRY_ADDRESS} --password-stdin
            - checkout
            - docker build -t hawk-collector:${SEMAPHORE_GIT_BRANCH} .
            - docker images
            - docker tag hawk-collector:${SEMAPHORE_GIT_BRANCH} ${REGISTRY_NAME}/hawk-collector:${SEMAPHORE_GIT_BRANCH}
            - docker push ${REGISTRY_NAME}/hawk-collector

  - name: Send notification
    task:
      secrets:
        - name: docker-registry
      jobs:
        - name: Send notification
          commands:
            - curl -X POST --data "message=ðŸ“¦ðŸ¦‘ *${SEMAPHORE_PROJECT_NAME}* deployed on \`${SEMAPHORE_GIT_BRANCH}\` branch&parse_mode=Markdown" https://notify.bot.codex.so/u/${HAWK_TELEGRAM_CHAT}